@page "/clear"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
<h3>Reset Teams</h3>

<p>Reset sets all current teams to inactive so that canvassers and cars can be assigned to new teams.</p>


    <div class="container">
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-50">
                <a href="#" @onclick="() => DeactivateAllTeams()" class="btn btn-danger text-white">Confirm Clear</a>
            </div>
        </div>
    </div>


@code {
    public string Message { get; set; }
    private List<TeamListItem> Teams;
    private string ErrorMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Teams = await http.GetFromJsonAsync<List<TeamListItem>>("api/team"); 
    }

    private async void DeactivateAllTeams()
    {
        bool AllSuccessful = false;
        foreach (var t in Teams)
        {
            if (t.Inactive == false)
            {
                t.Inactive = !t.Inactive;
                var toggleRes = await http.PutAsJsonAsync<object>($"api/team/active/{t.TeamId}", new());
                if(toggleRes.IsSuccessStatusCode) { AllSuccessful = true; }
                else { AllSuccessful = false; }
            }
        }
        if (AllSuccessful == true) { navigation.NavigateTo($"/team/"); } 
        else { ErrorMessage = "Could not deactivate all teams. Please try again."; }
    }
}