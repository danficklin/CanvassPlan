@page "/team"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3 class="text-primary">Active Teams</h3>
<a class="text-success" href="/team/create">Add a Team   |</a>
<a class="text-danger" href="/team/inactive">View Inactive Teams   |</a>
<a class="text-info" href="/team/all">View All Teams   |</a>
<a class="text-muted" href="/team/rearrange">Rearrange Teams</a>
<hr />

@if (_teams == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table text-white">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var team in _teams)
            {
                @if (team.Inactive == false)
                {
                    <tr>
                        <td>@team.TeamId</td>
                        <td>@team.Name</td>
                        <td>
                            <a href=@($"team/{team.TeamId}") class="btn btn-outline-info">Details</a>
                            <span style="width: 5px"></span>
                            <a href=@($"team/edit/{team.TeamId}") class="btn btn-outline-secondary">Edit</a>
                            <span style="width: 5px"></span>
                            <button class="btn btn-danger" @onclick="() => ToggleActive(team)">Deactivate</button>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <a href=@($"/clear") class="btn btn-danger btn-block btn-lg">Reset Teams</a>
    <hr />
    <a href=@($"/generate") class="btn btn-success btn-block btn-lg">Generate Plan</a>
    <hr />
}
<a href=@($"/") class="btn btn-primary btn-block btn-lg">Home</a>

@code {
    private List<TeamListItem> _teams;
    private string ErrorMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        _teams = await http.GetFromJsonAsync<List<TeamListItem>>("api/team"); 
    }

    private async void ToggleActive(TeamListItem team)
    {
        team.Inactive = !team.Inactive;
        var toggleRes = await http.PutAsJsonAsync<object>($"api/team/active/{team.TeamId}", new());
        if(toggleRes.IsSuccessStatusCode) { navigation.NavigateTo($"/team/"); }
        else { ErrorMessage = "Could not modify this canvasser. Please try again."; }
    }
}
