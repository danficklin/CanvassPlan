@page "/car/delete/{CarId:int}"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Delete @Car.Name</h3>

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
@if (Car != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span class="text-dark">Name: @Car.Name</span>
                <span class="text-muted"><strong>ID: @Car.CarId</strong></span>
            </div>
            <div class="card-body">
                @if (Car.Seatbelts != 0) { <h4 class="card-title text-dark">Seatbelts: @Car.Seatbelts </h4> }
                @if (Car.Make != null) { <h4 class="card-title text-dark">Make: @Car.Make </h4> }
                @if (Car.Model != null) { <h4 class="card-title text-dark">Model: @Car.Model </h4> }
                @if (Car.Year != 0) { <h4 class="card-title text-dark">Year: @Car.Year </h4> } 
                @if (Car.IsActive == true) { <p class="card-text text-danger">This car is inactive. </p> }
                else { <p class="card-text text-dark">This car is active.</p> }
                @if(Car.Riders?.LastOrDefault() != default) {
                <h4 class="card-title text-dark">Assigned Canvasser: @Car.Riders.LastOrDefault()?.Name</h4>
                } else { <p class="card-text text-dark"> No canvassers currently assigned.</p> }
                @if(Car.Teams?.LastOrDefault() != default) {
                <h4 class="card-title text-dark">This car is assigned to Team # @Car.Teams.LastOrDefault()?.TeamId</h4>
                } else { <p class="card-text text-dark"> This car is not currently assigned to a team.</p> }
                @if(ridersCount > 0)
                {
                    <h4 class="text-dark">Past Canvassers</h4> 
                    @foreach(CanvasserListItem c in Car.Riders)
                    {
                        <h4>@c.Name</h4>
                    }
                } else { <p class="card-text text-dark">No canvassers have been assigned to this vehicle.</p> }
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left text-dark">Created: @Car.DateCreated</span>
                @if (Car.DateModified != null) { <span class="text-right text-dark">Last Changed: @Car.DateModified</span>}
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-50">
                <a href=@($"/car/{CarId}") class="btn btn-outline-primary">Back to Details</a>
                <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Confirm Delete</a>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int CarId { get; set; }
    private CarDetail Car = new CarDetail();
    public string Message { get; set; }
    int ridersCount;
    protected override async Task OnInitializedAsync()
    {
        Car = await http.GetFromJsonAsync<CarDetail>($"/api/car/{CarId}");
    }
    private async void HandleClick()
    {
        var deleteRes = await http.DeleteAsync($"/api/car/delete/{CarId}");
        if(deleteRes.IsSuccessStatusCode) { navigation.NavigateTo("/car"); } 
        else { Message = "Failed to delete car. Please try again."; }
        ridersCount = Car.Riders.Count;
    }
}