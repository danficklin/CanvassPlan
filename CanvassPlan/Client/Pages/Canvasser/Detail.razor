@page "/canvasser/{CanvasserId:int}"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation


@if (Canvasser!= null)
{
   <h3>Canvasser</h3>
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span class="text-dark">Name: @Canvasser.Name</span>
                <span class="text-muted text-dark"><strong>@Canvasser.CanvasserId</strong></span>
            </div>
            <div class="card-body">
                <h4 class="card-title text-dark">Work Phone Number: @Canvasser.Phone </h4>

                @if (Canvasser.AltPhone != null) {
                    <h4 class="card-title text-dark">Personal Phone Number: @Canvasser.AltPhone </h4>
                }

                @if(Canvasser.Teams?.LastOrDefault() == default) { <p class="card-text text-dark"> Never assigned to a team.</p> }
                else if (Canvasser.Teams.LastOrDefault()?.Inactive == true) { <p class="card-text text-dark"> Not currently assigned to a team.</p>}
                else {  <h4 class="card-title text-dark">Current Team: @Canvasser.Teams.LastOrDefault()?.Name</h4> }

                @if(Canvasser.Sites?.LastOrDefault() != default) {
                <h4 class="card-title text-dark">Last Assigned Site: @Canvasser.Sites.LastOrDefault()?.Name</h4>
                } else { <p class="card-text text-dark"> Never assigned to a site.</p>}

                @if(Canvasser.Cars?.LastOrDefault() != default) {
                <h4 class="card-title text-dark">Last Assigned Car: @Canvasser.Cars.LastOrDefault()?.Name</h4>
                } else { <p class="card-text text-dark"> Never assigned to a car.</p>}

                @if(Canvasser.IsAbsent == true) { <p class="card-text text-secondary">This canvasser is absent.</p>}

                @if(Canvasser.IsDriver == true) { <p class="card-text text-dark">This canvasser is qualified to drive.</p>}
                
                @if(Canvasser.DroveYesterday == true) { <p class="card-text text-dark">This canvasser drove yesterday.</p>}

                @if(Canvasser.IsLeader == true) { <p class="card-text text-dark">This canvasser is a team leader.</p>}

                @if(Canvasser.IsTraining == true) { <p class="card-text text-dark">This canvasser is still in training.</p>}

                @if(Canvasser.Inactive == true) { <p class="card-text text-danger">This canvasser is inactive.</p>}

               @*@if(Canvasser.DoNotPair.Count > 0) { <p class="card-text">Do not pair this canvasser with the following canvassers: @Canvasser.DoNotPair</p>}

               @if(Canvasser.DoNotPair.Count > 0) { <p class="card-text">This canvasser works well with the following canvassers: @Canvasser.DoPair</p>}*@
               @if (Canvasser.Notes != null) {
                    <h4 class="card-title text-dark">Notes: @Canvasser.Notes </h4>
                }
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left text-dark">Created: @Canvasser.DateCreated</span>
                @if (Canvasser.DateModified != null) { <span class="text-right text-dark">Last Changed: @Canvasser.DateModified</span>}
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/canvasser/edit/{CanvasserId}") class="btn btn-outline-secondary">Edit</a>
                <span style="width: 15px"></span>
                @if (Canvasser.Inactive == false) { <a class="btn btn-danger" @onclick="() => ToggleActive(Canvasser)">Deactivate</a> }
                else if (Canvasser.Inactive == true) { <a class="btn btn-outline-danger" @onclick="() => ToggleActive(Canvasser)">Activate</a> }
                <span style="width: 15px"></span>
                <hr />
                @if (Canvasser.IsAbsent == false) { <a class="btn btn-secondary" @onclick="() => ToggleAbsent(Canvasser)">Mark as Absent</a> }
                else if (Canvasser.IsAbsent == true) { <a class="btn btn-outline-secondary" @onclick="() => ToggleAbsent(Canvasser)">Mark as Present</a> }
                <hr />
                <a href=@($"/canvasser/team/{CanvasserId}") class="btn btn-outline-success">Add to Team</a>
                <hr />
                <a href=@($"/canvasser/car/{CanvasserId}") class="btn btn-outline-warning">Add to Car</a>
                <hr />
                <a href=@($"/canvasser/site/{CanvasserId}") class="btn btn-outline-primary">Add to Site</a>
                <hr />

                <a href="/canvasser">Back to List of Canvassers</a>
            </div>
        </div>
    </div> 
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int CanvasserId { get; set; }
    private CanvasserDetail Canvasser = new CanvasserDetail();
    int carsCount;
    int sitesCount;
    int teamsCount;
    private string ErrorMessage { get;  set; }
    protected override async Task OnInitializedAsync()
    {
        Canvasser = await http.GetFromJsonAsync<CanvasserDetail>($"api/canvasser/{CanvasserId}");
        carsCount = Canvasser.Cars.Count;
        sitesCount = Canvasser.Sites.Count;
        teamsCount = Canvasser.Teams.Count;
    }

    private async void ToggleActive(CanvasserDetail canvasser)
    {
        canvasser.Inactive = !canvasser.Inactive;
        var toggleRes = await http.PutAsJsonAsync<object>($"api/canvasser/active/{canvasser.CanvasserId}", new());
        if(toggleRes.IsSuccessStatusCode) { navigation.NavigateTo($"/canvasser/{canvasser.CanvasserId}"); }
        else { ErrorMessage = "Could not modify this canvasser. Please try again."; }
    }

    private async void ToggleAbsent(CanvasserDetail canvasser)
    {
        canvasser.IsAbsent = !canvasser.IsAbsent;
        var toggleRes = await http.PutAsJsonAsync<object>($"api/canvasser/absent/{canvasser.CanvasserId}", new());
        if(toggleRes.IsSuccessStatusCode) { navigation.NavigateTo($"/canvasser/{canvasser.CanvasserId}"); }
        else { ErrorMessage = "Could not modify this canvasser. Please try again."; }
    }
}
