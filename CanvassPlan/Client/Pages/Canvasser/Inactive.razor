@page "/canvasser/inactive"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3 class="text-danger" >Inactive Canvassers</h3>
<a class="text-success" href="/canvasser/create">Add a Canvasser   |</a>
<a href="/canvasser/">View Active canvassers   |</a>
<a class="text-info" href="/canvasser/all">View All Canvassers</a>
<hr />
@if (_canvassers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table text-white">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
                @foreach (var canvasser in _canvassers)
                {
                    @if (canvasser.IsActive == true)
                    {
                    <tr>
                        <td>@canvasser.CanvasserId</td>
                        <td>@canvasser.Name</td>
                        <td>
                            <a href=@($"canvasser/{canvasser.CanvasserId}") class="btn btn-outline-info">Details</a>
                            <a href=@($"canvasser/edit/{canvasser.CanvasserId}") class="btn btn-outline-secondary">Edit</a>
                            <a href=@($"canvasser/delete/{canvasser.CanvasserId}") class="btn btn-outline-danger">Delete</a>
                            <a class="btn btn-outline-danger" @onclick="() => ToggleActive(canvasser)">Activate</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<CanvasserListItem> _canvassers;
    private string ErrorMessage { get;  set; }
    protected override async Task OnInitializedAsync()
    {
        _canvassers = await http.GetFromJsonAsync<List<CanvasserListItem>>("api/canvasser"); 
    }

    private async void ToggleActive(CanvasserListItem canvasser)
    {
        canvasser.IsActive = !canvasser.IsActive;
        var toggleRes = await http.PutAsJsonAsync<object>($"api/canvasser/active/{canvasser.CanvasserId}", new());
        if(toggleRes.IsSuccessStatusCode) { navigation.NavigateTo($"/canvasser/inactive"); }
        else { ErrorMessage = "Could not modify this canvasser. Please try again."; }
    }
}
