@page "/site/inactive"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3 class="text-danger" >Inactive Sites</h3>
<a class="text-success" href="/site/create">Add a Site   |</a>
<a href="/site/">View Active Sites   |</a>
<a class="text-info" href="/site/all">View All Sites   |</a>
<hr />
@if (_sites == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table text-white">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var site in _sites)
            @if (site.IsActive == true)
                    {
                        {
                            <tr>
                                <td>@site.SiteId</td>
                        <td>@site.Name</td>
                        <td>
                            <a href=@($"site/{site.SiteId}") class="btn btn-outline-info">Details</a>
                            <a href=@($"site/edit/{site.SiteId}") class="btn btn-outline-secondary">Edit</a>
                            <a href=@($"site/delete/{site.SiteId}") class="btn btn-outline-danger">Delete</a>
                            <a class="btn btn-outline-danger" @onclick="() => ToggleActive(site)">Activate</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
}

@code {
    private List<SiteListItem> _sites;
    private string ErrorMessage { get; set; }
    protected override async Task OnInitializedAsync()
    {
        _sites = await http.GetFromJsonAsync<List<SiteListItem>>("api/site"); 
    }

    private async void ToggleActive(SiteListItem site)
    {
        site.IsActive = !site.IsActive;
        var toggleRes = await http.PutAsJsonAsync<object>($"api/site/active/{site.SiteId}", new());
        if(toggleRes.IsSuccessStatusCode) { navigation.NavigateTo($"/site/inactive"); }
        else { ErrorMessage = "Could not modify this canvasser. Please try again."; }
    }
}
