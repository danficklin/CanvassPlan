@page "/site/delete/{SiteId:int}"
@attribute [Authorize]
@inject HttpClient http
@inject NavigationManager navigation

<h3>Delete @Site.Name</h3>

@if (Message != null)
{
    <h2 class="text-danger">@Message</h2>
}
@if (Site != null)
{
    <div class="container">
        <div class="sited">
            <div class="sited-header d-flex justify-content-between">
                <span>@Site.Name</span>
                <span class="text-muted"><strong>ID: @Site.SiteId</strong></span>
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-50">
                <a href=@($"/site/{SiteId}") class="btn btn-outline-primary">View Details</a>
                <a href="#" @onclick="HandleClick" class="btn btn-danger text-white">Delete Site</a>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int SiteId { get; set; }
    private SiteDetail Site = new SiteDetail();
    public string Message { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Site = await http.GetFromJsonAsync<SiteDetail>($"/api/site/{SiteId}");
    }
    private async void HandleClick()
    {
        var deleteRes = await http.DeleteAsync($"/api/site/delete/{SiteId}");
        if(deleteRes.IsSuccessStatusCode) { navigation.NavigateTo("/site"); } 
        else { Message = "Failed to delete site. Please try again."; }
    }
}